{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\texttutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [state, setState] = useState(initialState)\n  const [mode, setMode] = useState('dark'); //weather darkmode is Enabled or not\n  let toggleMode = () => {\n    if (mode === \"light\") {\n      setMode('dark');\n    } else {\n      setMode('light');\n    }\n  };\n  let textMode = () => {\n    if (mode === \"light\") {\n      setMode('dark');\n    } else {\n      setMode('light');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Textutils\",\n      mode: mode,\n      toggleMode: toggleMode,\n      textMode: textMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter the Text to analyze below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"x90f4MVxRZ8OpBMrg5Wn+Kd9eQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","TextForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","toggleMode","textMode","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["D:/REACT/texttutils/src/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n\nfunction App() {\n  // const [state, setState] = useState(initialState)\n  const [mode, setMode] = useState('dark') //weather darkmode is Enabled or not\n  let toggleMode= () =>{\n    if(mode === \"light\"){\n      setMode('dark')\n    }\n    else{\n      setMode('light')\n    }\n\n  }\n  let textMode=() =>{\n    if(mode === \"light\"){\n      setMode('dark')\n    }\n    else{\n      setMode('light')\n    }\n  }\n  return (\n  <>\n<Navbar title = \"Textutils\" mode = {mode} toggleMode = {toggleMode} textMode = {textMode}/>\n{ /* <Navbar/> */ }\n<div className=\"container my-3\">\n<TextForm heading = \"Enter the Text to analyze below\"/>\n{/* <About/> */}\n</div>\n</>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC,EAAC;EACzC,IAAIW,UAAU,GAAEA,CAAA,KAAK;IACnB,IAAGF,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;IACjB,CAAC,MACG;MACFA,OAAO,CAAC,OAAO,CAAC;IAClB;EAEF,CAAC;EACD,IAAIE,QAAQ,GAACA,CAAA,KAAK;IAChB,IAAGH,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;IACjB,CAAC,MACG;MACFA,OAAO,CAAC,OAAO,CAAC;IAClB;EACF,CAAC;EACD,oBACAN,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACFT,OAAA,CAACH,MAAM;MAACa,KAAK,EAAG,WAAW;MAACL,IAAI,EAAIA,IAAK;MAACE,UAAU,EAAIA,UAAW;MAACC,QAAQ,EAAIA;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAE3Fd,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAN,QAAA,eAC/BT,OAAA,CAACF,QAAQ;QAACkB,OAAO,EAAG;MAAiC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElD,CAAC;EAAA,eACJ,CAAC;AAEH;AAACV,EAAA,CA9BQD,GAAG;AAAAc,EAAA,GAAHd,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}