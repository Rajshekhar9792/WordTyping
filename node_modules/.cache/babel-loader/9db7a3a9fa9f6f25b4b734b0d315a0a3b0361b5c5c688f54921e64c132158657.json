{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\texttutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport Alert from './Components/Alert';\nimport TextForm from './Components/TextForm';\n// import {BrowserRouter,Route,Routes} from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [state, setState] = useState(initialState)\n  const [mode, setMode] = useState('light'); //weather darkmode is Enabled or not\n  const [text, setText] = useState('text');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  // const [title, setTitle] = useState('title') \n  let toggleMode = () => {\n    if (mode === \"light\") {\n      setMode('dark');\n      setText('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('dark mode is Enabled', 'success ');\n      document.title = 'textutils - darkmode';\n      setInterval(() => {\n        document.title = 'install Randi app just now';\n      }, 1500);\n      setInterval(() => {\n        document.title = 'install Byjus app just now';\n      }, 3000);\n    } else {\n      setMode('light');\n      setText('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert('light mode is Enabled', 'success ');\n      document.title = 'textutils - lightmode';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Textutils\",\n        mode: mode,\n        toggleMode: toggleMode,\n        text: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter the Text to analyze below\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Y689lcKsf7Ue2dSSHdnAbXFINcs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","Alert","TextForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","text","setText","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","setInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["D:/REACT/texttutils/src/App.js"],"sourcesContent":["\nimport { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport Alert from './Components/Alert';\nimport TextForm from './Components/TextForm';\n// import {BrowserRouter,Route,Routes} from 'react-router-dom';\n\nfunction App() {\n  // const [state, setState] = useState(initialState)\n  const [mode, setMode] = useState('light') //weather darkmode is Enabled or not\n  const [text, setText] = useState('text') \n  const [alert, setAlert] = useState(null) \n  const showAlert=(message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() =>{\n      setAlert(null);\n\n    },3000);\n\n  }\n  // const [title, setTitle] = useState('title') \n  let toggleMode= () =>{\n    if(mode === \"light\"){\n      setMode('dark')\n      setText('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert('dark mode is Enabled','success ')\n      document.title='textutils - darkmode';\n      setInterval(() =>{\n        document.title = 'install Randi app just now';\n      },1500)\n      setInterval(() =>{\n        document.title = 'install Byjus app just now';\n      },3000)\n    }\n    else{\n      setMode('light')\n      setText('dark')\n      document.body.style.backgroundColor = 'grey';\n      showAlert('light mode is Enabled','success ')\n      document.title='textutils - lightmode';\n    }\n\n  }\n  \n  return (\n  <>\n<Alert alert = {alert}/>\n<div className=\"container my-3\">\n{/* <BrowserRouter> */}\n<Navbar title = \"Textutils\" mode = {mode} toggleMode = {toggleMode} text = {text}/>\n<TextForm showAlert={showAlert} heading = \"Enter the Text to analyze below\" mode = {mode}/>\n{/* <Routes>\n          <Route exact path=\"/about\" element={ <About />}></Route>\n          <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading = \"Enter the Text to analyze below\" mode = {mode}/>}></Route>  \n</Routes>\n</BrowserRouter> */}\n</div>\n</>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}